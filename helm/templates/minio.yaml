apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: services
spec:
  serviceName: minio
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: "{{ .Values.images.minio }}"
          command: ["minio", "server", "/data", "--console-address", ":9001"]
          env:
            - name: MINIO_ROOT_USER
              value: "{{ .Values.env.S3_ACCESS_KEY }}"
            - name: MINIO_ROOT_PASSWORD
              value: "{{ .Values.env.S3_SECRET_KEY }}"
          ports:
            - name: minio
              containerPort: 9000
            - name: minio-console
              containerPort: 9001
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          volumeMounts:
            - name: minio-data
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: minio-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.storage.minioSize }}
        {{- if .Values.persistence.minioLocalPath }}
        storageClassName: ""
        selector:
          matchLabels:
            statefulset: minio
        {{- end }}

---

apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: services
spec:
  selector:
    app: minio
  ports:
    - name: minio
      port: 9000
      targetPort: 9000
    - name: minio-console
      port: 9001
      targetPort: 9001
  clusterIP: None