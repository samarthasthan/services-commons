apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: services
spec:
  serviceName: elasticsearch
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - name: elasticsearch
          image: "{{ .Values.images.elasticsearch }}"
          env:
            - name: cluster.routing.allocation.disk.threshold_enabled
              value: "true"
            - name: cluster.routing.allocation.disk.watermark.low
              value: "512mb"
            - name: cluster.routing.allocation.disk.watermark.high
              value: "256mb"
            - name: cluster.routing.allocation.disk.watermark.flood_stage
              value: "128mb"
            - name: discovery.type
              value: "single-node"
            - name: ES_JAVA_OPTS
              value: "{{ .Values.env.ES_JAVA_OPTS }}"
            - name: xpack.security.enabled
              value: "false"
          ports:
            - name: http
              containerPort: 9200
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          volumeMounts:
            - name: elasticsearch-data
              mountPath: /usr/share/elasticsearch/data
          readinessProbe:
            httpGet:
              path: /
              port: 9200
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
  volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.storage.elasticsearchSize }}
        {{- if .Values.persistence.elasticsearchLocalPath }}
        storageClassName: ""
        selector:
          matchLabels:
            statefulset: elasticsearch
        {{- end }}

---

apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: services
spec:
  selector:
    app: elasticsearch
  ports:
    - port: 9200
      targetPort: 9200
  clusterIP: None