apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: services
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: "{{ .Values.images.redis }}"
          command: ["redis-server", "--requirepass", "{{ .Values.env.REDIS_PASSWORD }}"]
          env:
            - name: REDIS_PASSWORD
              value: "{{ .Values.env.REDIS_PASSWORD }}"
          ports:
            - name: redis
              containerPort: 6379
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          volumeMounts:
            - name: redis-data
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: redis-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.storage.redisSize }}
        {{- if .Values.persistence.redisLocalPath }}
        storageClassName: ""
        selector:
          matchLabels:
            statefulset: redis
        {{- end }}

---

apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: services
spec:
  selector:
    app: redis
  ports:
    - port: 6379
      targetPort: 6379
  clusterIP: None